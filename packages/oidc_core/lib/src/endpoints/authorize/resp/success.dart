import 'package:json_annotation/json_annotation.dart';
import 'package:oidc_core/src/endpoints/authorize/resp/base.dart';
import 'package:oidc_core/src/helpers/converters.dart';
import 'package:oidc_core/src/models/json_based_object.dart';

part 'success.g.dart';

/// Successful Authentication Response
@JsonSerializable(
  createFactory: true,
  createToJson: false,
)
class OidcAuthorizeResponseSuccess extends OidcAuthorizeResponseBase {
  ///
  const OidcAuthorizeResponseSuccess({
    required super.src,
    this.code,
    super.sessionState,
    super.state,
    this.tokenType,
    this.scope = const [],
    this.expiresAt,
    this.expiresIn,
    this.accessToken,
    this.idToken,
  });

  ///
  factory OidcAuthorizeResponseSuccess.fromJson(Map<String, dynamic> src) =>
      _$OidcAuthorizeResponseSuccessFromJson(src);

  /// code
  static const kcode = 'code';

  /// access_token
  static const kaccessToken = 'access_token';

  /// id_token
  static const kidToken = 'id_token';

  /// REQUIRED, if the request_type was code.
  ///
  /// The authorization code generated by the authorization server.
  ///
  /// The authorization code MUST expire shortly after it is issued to
  /// mitigate the risk of leaks.
  ///
  /// A maximum authorization code lifetime of 10 minutes is RECOMMENDED.
  ///
  /// The client MUST NOT use the authorization code
  @JsonKey(name: kcode)
  final String? code;

  @JsonKey(name: 'scope', fromJson: splitSpaceDelimitedString)
  final List<String> scope;

  @JsonKey(name: kaccessToken)
  final String? accessToken;
  @JsonKey(name: kidToken)
  final String? idToken;
  @JsonKey(name: 'token_type')
  final String? tokenType;
  @JsonKey(name: 'expires_in')
  final Duration? expiresIn;

  @JsonKey(name: 'expires_at')
  final DateTime? expiresAt;
}
